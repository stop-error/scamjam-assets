# This is a basic workflow to help you get started with Actions

name: update-dnsblocklists

# Controls when the workflow will run
on:
  schedule:
    - cron: '0 15 * * *'
  push:
    branches:
      - main
    paths:
      - "threats/dns/**"
      - "config/hosts-compiler/**"
  workflow_dispatch:

  
jobs:
  update-scamjam-blocklists:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
          

      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - run: | 
          npm i -g @adguard/hostlist-compiler
          mkdir upload
          hostlist-compiler -c config/hosts-compiler/hostlist-compiler-combined.json -o upload/scamjam-combined.txt
          hostlist-compiler -c config/hosts-compiler/hostlist-compiler-threat.json -o upload/scamjam-threat.txt
          hostlist-compiler -c config/hosts-compiler/hostlist-compiler-dyndns.json -o upload/scamjam-dyndns.txt
          hostlist-compiler -c config/hosts-compiler/hostlist-compiler-tld.json -o upload/scamjam-tld.txt
          hostlist-compiler -c config/hosts-compiler/hostlist-compiler-tld-allow.json -o upload/scamjam-tld-allow.txt
          hostlist-compiler -c config/hosts-compiler/hostlist-compiler-nrd.json -o upload/scamjam-nrd.txt
          hostlist-compiler -c config/hosts-compiler/hostlist-compiler-remoteaccess.json -o upload/scamjam-remoteaccess.txt


          
          
      - uses: richardrigutins/replace-in-files@v2
        with:
          files: 'upload/scamjam-tld-allow.txt'
          search-text: '@@'
          replacement-text: ''

          

      - uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: upload
          destination-dir: threats/dns/ # Can be anything as long as it is an actual path
          output-file-url: true # defaults to true
          multipart-size: 100 # If the file size is greater than the value provided here, then use multipart upload
          max-retries: 5 # The maximum number of retries it takes to upload a multipart chunk until it moves on to the next part
          multipart-concurrent: true # Whether to concurrently upload a multipart chunk
          keep-file-fresh: true # defaults to false
